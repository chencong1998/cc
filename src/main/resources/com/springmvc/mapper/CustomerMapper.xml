<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springmvc.mapper.CustomerMapper">
  <resultMap id="BaseResultMap" type="com.springmvc.bean.Customer">
    <id column="customerID" jdbcType="INTEGER" property="customerid" />
    <result column="customerName" jdbcType="VARCHAR" property="customername" />
    <result column="contactName" jdbcType="VARCHAR" property="contactname" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="paidID" jdbcType="INTEGER" property="paidid" />
    <result column="addr" jdbcType="VARCHAR" property="addr" />
    <result column="areaID" jdbcType="INTEGER" property="areaid" />
    <result column="customerTypeID" jdbcType="INTEGER" property="customertypeid" />
    <result column="factMoney" jdbcType="DECIMAL" property="factmoney" />
    <result column="paidMoney" jdbcType="DECIMAL" property="paidmoney" />
  </resultMap>
  <resultMap id="WithOtherResultMap" type="com.springmvc.bean.Customer">
    <id column="customerID" jdbcType="INTEGER" property="customerid" />
    <result column="customerName" jdbcType="VARCHAR" property="customername" />
    <result column="contactName" jdbcType="VARCHAR" property="contactname" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="paidID" jdbcType="INTEGER" property="paidid" />
    <result column="addr" jdbcType="VARCHAR" property="addr" />
    <result column="areaID" jdbcType="INTEGER" property="areaid" />
    <result column="customerTypeID" jdbcType="INTEGER" property="customertypeid" />
    <result column="factMoney" jdbcType="DECIMAL" property="factmoney" />
    <result column="paidMoney" jdbcType="DECIMAL" property="paidmoney" />
    <association property="paidtype" javaType="com.springmvc.bean.Paidtype">
      <id column="paidID" property="paidid"></id>
      <result column="paidName" property="paidname"></result>
    </association>
    <association property="customertype" javaType="com.springmvc.bean.Customertype">
      <id column="customerTypeID" property="customertypeid"></id>
      <result column="customerTypeName" property="customertypename"></result>
    </association>
    <association property="area" javaType="com.springmvc.bean.Area">
      <id column="areaID" property="areaid"></id>
      <result column="areaName" property="areaname"></result>
    </association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    customerID, customerName, contactName, phone, paidID, addr, areaID, customerTypeID, 
    factMoney, paidMoney
  </sql>
  <sql id="WithOther_Column_List">
    customerID,customerName,contactName,phone,customer.paidID,customer.areaID,customer.customerTypeID,factMoney,paidMoney,paidName,areaName,customerTypeName
  </sql>
  <!--List<Customer> selectByExampleWithother(CustomerExample example);
  Customer selectByPrimaryKeyWithother(Integer customerid);-->
  <!--查询多张表的关联数据 -->
  <select id="selectByExampleWithother" resultMap="WithOtherResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="WithOther_Column_List" />
    FROM
    customer
    LEFT JOIN paidtype on customer.paidID=paidtype.paidID
    LEFT JOIN area on customer.areaID=area.areaID
    LEFT JOIN customertype on customer.customerTypeID=customertype.customerTypeID
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKeyWithother" resultMap="WithOtherResultMap">
    select
    <include refid="WithOther_Column_List" />
    FROM
    customer
    LEFT JOIN paidtype on customer.paidID=paidtype.paidID
    LEFT JOIN area on customer.areaID=area.areaID
    LEFT JOIN customertype on customer.customerTypeID=customertype.customerTypeID
    where customerID = #{customerid,jdbcType=INTEGER}
  </select>

  <!--查询单表-->
  <select id="selectByExample" parameterType="com.springmvc.bean.CustomerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from customer
    where customerID = #{customerid,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from customer
    where customerID = #{customerid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.springmvc.bean.CustomerExample">
    delete from customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.springmvc.bean.Customer">
    insert into customer (customerID, customerName, contactName, 
      phone, paidID, addr, 
      areaID, customerTypeID, factMoney, 
      paidMoney)
    values (#{customerid,jdbcType=INTEGER}, #{customername,jdbcType=VARCHAR}, #{contactname,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{paidid,jdbcType=INTEGER}, #{addr,jdbcType=VARCHAR}, 
      #{areaid,jdbcType=INTEGER}, #{customertypeid,jdbcType=INTEGER}, #{factmoney,jdbcType=DECIMAL}, 
      #{paidmoney,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.springmvc.bean.Customer" useGeneratedKeys="true" keyProperty="customerid">
    insert into customer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="customerid != null">
        customerID,
      </if>
      <if test="customername != null">
        customerName,
      </if>
      <if test="contactname != null">
        contactName,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="paidid != null">
        paidID,
      </if>
      <if test="addr != null">
        addr,
      </if>
      <if test="areaid != null">
        areaID,
      </if>
      <if test="customertypeid != null">
        customerTypeID,
      </if>
      <if test="factmoney != null">
        factMoney,
      </if>
      <if test="paidmoney != null">
        paidMoney,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="customerid != null">
        #{customerid,jdbcType=INTEGER},
      </if>
      <if test="customername != null">
        #{customername,jdbcType=VARCHAR},
      </if>
      <if test="contactname != null">
        #{contactname,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="paidid != null">
        #{paidid,jdbcType=INTEGER},
      </if>
      <if test="addr != null">
        #{addr,jdbcType=VARCHAR},
      </if>
      <if test="areaid != null">
        #{areaid,jdbcType=INTEGER},
      </if>
      <if test="customertypeid != null">
        #{customertypeid,jdbcType=INTEGER},
      </if>
      <if test="factmoney != null">
        #{factmoney,jdbcType=DECIMAL},
      </if>
      <if test="paidmoney != null">
        #{paidmoney,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.springmvc.bean.CustomerExample" resultType="java.lang.Long">
    select count(*) from customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update customer
    <set>
      <if test="record.customerid != null">
        customerID = #{record.customerid,jdbcType=INTEGER},
      </if>
      <if test="record.customername != null">
        customerName = #{record.customername,jdbcType=VARCHAR},
      </if>
      <if test="record.contactname != null">
        contactName = #{record.contactname,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.paidid != null">
        paidID = #{record.paidid,jdbcType=INTEGER},
      </if>
      <if test="record.addr != null">
        addr = #{record.addr,jdbcType=VARCHAR},
      </if>
      <if test="record.areaid != null">
        areaID = #{record.areaid,jdbcType=INTEGER},
      </if>
      <if test="record.customertypeid != null">
        customerTypeID = #{record.customertypeid,jdbcType=INTEGER},
      </if>
      <if test="record.factmoney != null">
        factMoney = #{record.factmoney,jdbcType=DECIMAL},
      </if>
      <if test="record.paidmoney != null">
        paidMoney = #{record.paidmoney,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update customer
    set customerID = #{record.customerid,jdbcType=INTEGER},
      customerName = #{record.customername,jdbcType=VARCHAR},
      contactName = #{record.contactname,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      paidID = #{record.paidid,jdbcType=INTEGER},
      addr = #{record.addr,jdbcType=VARCHAR},
      areaID = #{record.areaid,jdbcType=INTEGER},
      customerTypeID = #{record.customertypeid,jdbcType=INTEGER},
      factMoney = #{record.factmoney,jdbcType=DECIMAL},
      paidMoney = #{record.paidmoney,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.springmvc.bean.Customer">
    update customer
    <set>
      <if test="customername != null">
        customerName = #{customername,jdbcType=VARCHAR},
      </if>
      <if test="contactname != null">
        contactName = #{contactname,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="paidid != null">
        paidID = #{paidid,jdbcType=INTEGER},
      </if>
      <if test="addr != null">
        addr = #{addr,jdbcType=VARCHAR},
      </if>
      <if test="areaid != null">
        areaID = #{areaid,jdbcType=INTEGER},
      </if>
      <if test="customertypeid != null">
        customerTypeID = #{customertypeid,jdbcType=INTEGER},
      </if>
      <if test="factmoney != null">
        factMoney = #{factmoney,jdbcType=DECIMAL},
      </if>
      <if test="paidmoney != null">
        paidMoney = #{paidmoney,jdbcType=DECIMAL},
      </if>
    </set>
    where customerID = #{customerid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springmvc.bean.Customer">
    update customer
    set customerName = #{customername,jdbcType=VARCHAR},
      contactName = #{contactname,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      paidID = #{paidid,jdbcType=INTEGER},
      addr = #{addr,jdbcType=VARCHAR},
      areaID = #{areaid,jdbcType=INTEGER},
      customerTypeID = #{customertypeid,jdbcType=INTEGER},
      factMoney = #{factmoney,jdbcType=DECIMAL},
      paidMoney = #{paidmoney,jdbcType=DECIMAL}
    where customerID = #{customerid,jdbcType=INTEGER}
  </update>
</mapper>